{"version":3,"file":"_id_-aF09_Vp6.js","sources":["../../../../pages/category/subcategory/[id].vue"],"sourcesContent":["<template>\n  <div class=\"card shadow border-0 mb-7\">\n    <div class=\"card-header\">\n      <h5 class=\"mb-0\">แก้ไขประเภท</h5>\n    </div>\n    <Loader :loading=\"loading\" />\n    {{ form }}\n    <div class=\"card-body\">\n      <form @submit.prevent=\"updateCategory()\" class=\"position-relative\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div class=\"mb-3\">\n              <label for=\"exampleInputEmail1\" class=\"form-label\">ประเภท</label>\n              <input\n                v-if=\"form?.name\"\n                type=\"text\"\n                class=\"form-control form-control-sm\"\n                v-model=\"form.name\"\n              />\n            </div>\n          </div>\n          <div class=\"col-md-6\">\n            <div class=\"mb-3\">\n              <label for=\"exampleInputEmail1\" class=\"form-label\">หมวดหมู่</label>\n              <select class=\"form-select form-select-sm\" @change=\"selectedCategory\">\n                <option value=\"\" disabled selected>เลือกหมวดหมู่</option>\n                <option\n                  v-if=\"form?.categorys\"\n                  :value=\"category.id\"\n                  v-for=\"(category, index) in categorys\"\n                  :key=\"index\"\n                  :selected=\"Number(category.id) == form.categorys?.id\"\n                >\n                  {{ category.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-sm\" :disabled=\"loadingBtn\">\n          {{ loadingBtn ? \"กำลังอัพเดต...\" : \"อัพเดต\" }}\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { categoryData } from \"~/types/categoryType\";\nimport type { subCategoryFormData } from \"~/types/subCategoryType\";\ninterface Toast {\n  success: (message: string, options?: { position?: string; timeout?: number }) => void;\n}\nimport { useNuxtApp } from \"#app\";\nconst nuxtApp = useNuxtApp();\n\nconst showToast = (text: string) => {\n  const toastInstance = nuxtApp.$toast as Toast;\n  toastInstance.success(text, {\n    position: \"bottom-right\",\n    timeout: 2500,\n  });\n};\n\nconst router = useRoute();\nconst form = ref<subCategoryFormData | null>(null);\n\nconst loading = ref<boolean>(false);\nconst loadingBtn = ref<boolean>(false);\n\nconst categorys = ref<categoryData[] | null>(null);\n\nconst selectedCategory = async (event: Event) => {\n  try {\n    const target = event.target as HTMLSelectElement;\n    const selectedValue = target.value;\n\n    // สร้าง object ใหม่เพื่อกำหนดค่าให้กับ form.value.category\n    if (form.value && form.value.categorys) {\n      form.value.categorys.id = Number(selectedValue);\n    } else {\n      console.warn(\"form.value or form.value.categorys is undefined\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst updateCategory = async () => {\n  loadingBtn.value = true;\n  try {\n    const updateValue = {\n      name: form.value?.name,\n      category: form.value?.categorys?.id,\n    };\n    const response = await fetch(\"/api/subcategory/\" + router.params.id, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updateValue),\n    });\n    const data = await response.json();\n    showToast(\"อัพเดตสำเร็จ\");\n    navigateTo({ name: \"category-subcategory\" });\n  } catch (e) {\n    console.log(e);\n  } finally {\n    loadingBtn.value = false;\n  }\n};\n\nconst getSubCategorys = async () => {\n  loading.value = true;\n  try {\n    await getCategory();\n    const response = await fetch(\"/api/subcategory/\" + router.params.id, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    form.value = data.data;\n  } catch (error) {\n    console.log(error);\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst getCategory = async () => {\n  try {\n    const response = await fetch(\"/api/category\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    categorys.value = data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nonMounted(() => {\n  getSubCategorys();\n});\n</script>\n\n<style scoped>\n.position-relative {\n  position: relative;\n}\n.spinner-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAgEe,aAAS;AAClB,UAAA,OAAO,IAAgC,IAAI;AAE3C,UAAA,UAAU,IAAa,KAAK;AAC5B,UAAA,aAAa,IAAa,KAAK;AAE/B,UAAA,YAAY,IAA2B,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}